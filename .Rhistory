# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# read in the compete csv file
covid_data <- read.csv(input_file_name)
("output/",
input_file_name,
"_",
state_to_subset,
".csv")
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# read in the compete csv file
covid_data <- read.csv("data/raw_data/applemobilitytrends-2021-09-07.csv")
View(covid_data)
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
View(subset_mobility_data_to_state)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# read in the compete csv file
covid_data <- read.csv(input_file_name)
input_file_name <- "data/raw_data/applemobilitytrends-2021-09-19.csv"
state_to_subset <- "ohio"
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
View(state_data)
# read in the compete csv file
covid_data <- read.csv(input_file_name)
paste0("output/",
input_file_name,
"_",
state_to_subset,
".csv")
input_file_name
basename(input_file_name)
?basename
input_file_name
paste0("output/",
basename(input_file_name,
"_",
state_to_subset,
".csv")
paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv")
basename()
baseenv(input_file_name)
basename(input_file_name)
input_file_name
?basename
paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv")
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv")
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv"))
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "ohio")
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv")
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "ohio")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "ohio")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "ohio")
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv"))
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Alaska")
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv"))
}
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Alaska")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# check that the subsetted data actually has data in it
if(nrow(state_data) == 0) {
stop("ERROR, no rows matching given state name. Did you make a typo?")
}
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv"))
}
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansa")
lintr::lint(filename = "code/01_subset_data_to_a_state.R.R")
lintr::lint(filename("code/01_subset_data_to_a_state.R.R"))
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv"
Subset_mobility_data_to_state()
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# check that the subsetted data actually has data in it
if(nrow(state_data) == 0) {
stop("ERROR, no rows matching given state name. Did you make a typo?")
}
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv"))
}
subset_mobility_data_to_state()
# test out use of the function
subset_mobility_data_to_state()
subset_mobility_data_to_state(+)
subset_mobility_data_to_state(input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv", state_to_subset = "ohio")
state_to_subset = "ohio"
state_to_subset = "ohio"
paste0("output/",
basename(input_file_name),
"_",
state_to_subset,
".csv"))
}
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
source("Code/functions/subset_mobility_data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
input_file_name,
"_",
state_to_subset,
".csv"))
}
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
source("Code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from Ohio
# and then write out a csv file that only has that subset
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 8th, 2021
# read in the compete csv file
covid_data <- read.csv("data/raw_data/applemobilitytrends-2021-09-07.csv")
# subset the dataset to only include the sub.region column has
# "ohio" in it.
ohio_data <- covid_data[covid_data$sub.region == "Ohio",]
# save the ohio data to a new csv file in the output directory
write.csv(ohio_data, file = "output/ohio_apple_mobility_data.csv")
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# uses functions in the code/function directory
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# load functions
source("code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# create a function to subset any US state out of the full dataset
# this should also create an output CSV file that is named based on the state
# that is subsetted
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# check that the subsetted data actually has data in it
if(nrow(state_data) == 0) {
stop("ERROR, no rows matching given state name. Did you make a typo?")
}
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
tools::file_path_sans_ext(
basename(input_file_name)),
"_",
state_to_subset,
".csv"))
}
View(subset_mobility_data_to_state)
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# create a function to subset any US state out of the full dataset
# this should also create an output CSV file that is named based on the state
# that is subsetted
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# check that the subsetted data actually has data in it
if(nrow(state_data) == 0) {
stop("ERROR, no rows matching given state name. Did you make a typo?")
}
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
tools::file_path_sans_ext(
basename(input_file_name)),
"_",
state_to_subset,
".csv"))
}
# read in the compete csv file
covid_data <- read.csv("data/raw_data/applemobilitytrends-2021-09-07.csv")
# subset the dataset to only include the sub.region column has
# "ohio" in it.
ohio_data <- covid_data[covid_data$sub.region == "Ohio",]
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# uses functions in the code/function directory
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# load functions
source("code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# create a function to subset any US state out of the full dataset
# this should also create an output CSV file that is named based on the state
# that is subsetted
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(i
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# create a function to subset any US state out of the full dataset
# this should also create an output CSV file that is named based on the state
# that is subsetted
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# uses functions in the code/function directory
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# load functions
source("code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# create a function to subset any US state out of the full dataset
# this should also create an output CSV file that is named based on the state
# that is subsetted
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# check that the subsetted data actually has data in it
if(nrow(state_data) == 0) {
stop("ERROR, no rows matching given state name. Did you make a typo?")
}
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
tools::file_path_sans_ext(
basename(input_file_name)),
"_",
state_to_subset,
".csv"))
}
subset_mobility_data_to_state <- function(input_file_name,
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
# subset the dataset to only include the sub.region column has
# the state name in it. but we want all columns.
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# check that the subsetted data actually has data in it
if(nrow(state_data) == 0) {
stop("ERROR, no rows matching given state name. Did you make a typo?")
}
# save the state data to a new csv file in the output directory
write.csv(state_data, file = paste0("output/",
tools::file_path_sans_ext(
basename(input_file_name)),
"_",
state_to_subset,
".csv"))
}
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
state_to_subset) {
# read in the compete csv file
covid_data <- read.csv(input_file_name)
state_data <- covid_data[covid_data$sub.region == state_to_subset,]
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# uses functions in the code/function directory
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# load functions
source("code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# uses functions in the code/function directory
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# load functions
source("code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# uses functions in the code/function directory
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# load functions
source("code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
source("~/analyze_apple_covid_mobility/analyze_apple_covid_mobility_dataset/code/01_subset_data_to_a_state.R")
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# uses functions in the code/function directory
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# load functions
source("code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
# script to read in Apple mobility data from a csv file
# and subset the data to just include rows from any particular state
# and then write out a csv file that only has that subset
# uses functions in the code/function directory
# Muhammed Hamir
# mfhamir@dons.usfca.edu
# Sept 20th, 2021
# load functions
source("code/functions/subset_mobility_ data_to_state.R")
# test out the use of the function
subset_mobility_data_to_state(
input_file_name = "data/raw_data/applemobilitytrends-2021-09-19.csv",
state_to_subset = "Kansas")
